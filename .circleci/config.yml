# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  api:
    docker:
      - image: circleci/node:8
        environment:
            POSTGRES_USER=postgres
            POSTGRES_PASSWORD=root
            POSTGRES_DB=database
            POSTGRES_HOST=postgres
            POSTGRES_PORT=5432
      - image: postgres:9.6.1
        environment:
          POSTGRES_USER=postgres
          POSTGRES_PASSWORD=root
          POSTGRES_DB=database
          POSTGRES_HOST=postgres
          POSTGRES_PORT=5432
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "api/package.json" }}
      - run:
          name: API - Install Dependencies
          command: npm install
          working_directory: api
      - run:
          name: API - Run Linter
          command: npm run lint -- --format junit -o reports/junit/eslint/js-lint-results.xml
          working_directory: api
          when: always
      - run:
          name: Install Dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait For Database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run Migrations
          command: node_modules/.bin/knex migrate:latest
          working_directory: api
      - run:
          name: Run Lab Tests
          command: npm run test:ci
          working_directory: api
          environment:
            JWT_SECRET: secret
      - store_test_results:
          path: api/reports/junit
      - store_artifacts:
          path: api/reports/junit
      - save_cache:
          key: dependency-cache-{{ checksum "api/package.json" }}
          paths:
            - api/node_modules
  frontend:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "frontend/package.json" }}
      - run:
          name: Frontend - Install Dependencies
          command: npm install
          working_directory: frontend
      - run:
          name: Frontend - Run Linter and Build
          command: npm run build
          working_directory: frontend
      - save_cache:
          key: dependency-cache-{{ checksum "frontend/package.json" }}
          paths:
            - frontend/node_modules
workflows:
  version: 2
  build:
    jobs:
      - api
      - frontend
